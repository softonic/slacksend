#!/bin/bash

function error() {
    echo "$1" && exit $2
}

template="deploy"
while getopts ":s:e:t:b:c:l:v:m:u:i:" opt; do
    case $opt in
        t)
            token=$OPTARG
            ;;
        c)
            channel=$OPTARG
            ;;
        v)
            version=$OPTARG
            ;;
        l)
            url=$OPTARG
            ;;
        b)
            build_url=$OPTARG
            ;;
        u)
            user=$OPTARG
            ;;
        i)
            icon=$OPTARG
            ;;
        e)
            env=$OPTARG
            ;;
        s)
            status=$OPTARG
            ;;
        m)
            template=$OPTARG
            ;;
        \?)
            echo "Invalid option: -$OPTARG"
            usage;
            ;;
    esac
done

for opt in "icon" "user" "status" "build_url" "channel" "token";
do
    [ -z "${!opt}" ] && error "Option '$opt' must be set." 1
done

if [ "deploy" == "$template" ]; then
    for opt in "env" "version";
    do
        [ -z "${!opt}" ] && error "Option '$opt' must be set." 1
    done

    if [ -n "$url" ]; then
        message="<$url|$env> deploy $status <$build_url|$version>";
    else
        message="*$env* deploy $status <$build_url|$version>";
    fi

elif [ "test" == "$template" ]; then
    message="Tests <$build_url|$status>";
else
    error "Template $template is not valid" 1
fi

if [ "$status" == 'FAILED' ];
then
    color="#ff0000";
elif [ "$status" == 'SUCCESS' ]
then
    color="#36a64f";
elif [ "$status" == 'UNSTABLE' ]
then
    color="#ffff00";
else
    error "Status can be 'FAILED', 'SUCCESS' or 'UNSTABLE'" 1;
fi

curl -sS \
     --data-urlencode "token=$token" \
     --data-urlencode "channel=$channel" \
     --data-urlencode 'attachments=[{"text": "'"$message"'","mrkdwn_in": ["text"], "color": "'"$color"'"}]' \
     --data-urlencode "username=$user" \
     --data-urlencode 'as_user=false' \
     --data-urlencode "icon_emoji=$icon" \
     --data-urlencode 'pretty=1' \
     https://slack.com/api/chat.postMessage | jq ".ok"
